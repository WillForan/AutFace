#!/usr/bin/env bash
set -euo pipefail
env|grep -q ^DRYRUN=. && DRYRUN=echo || DRYRUN=""
env|grep -q ^ONLYONE=. || ONLYONE=""
writeto() { [ -n "$DRYRUN" ] && cat && echo "# would save output to $1" && return; cat > $1; }
cd $(dirname "$0")
final_preproc=nfaswdktm_func_6.nii.gz
expected_runs=3
EXPECT_ORDER=(AUS Car USA)
usage(){
   cat <<H
USAGE:
   $0 all
   DRYRUN=1 $0 ../preproc/aus/102/ses-1/*/$final_preproc
SYNOPSIS:
  * look through all of one event type (def: aus) to find all $final_preproc (not TEST)
  * if not $expected_runs, skip
  * run 3dDeconvolve and save to ../glm
  * ONLYONE=1 to just do one
H

exit
}

[ $# -eq 0 ] && usage

[ "$1" = "all" ] &&
    PREPROC_INPUT=( ../preproc/aus/[0-9][0-9][0-9]/ses-*/*/$final_preproc) ||
    PREPROC_INPUT=("$@")


for aus_file in ${PREPROC_INPUT[@]};  do
   [ ! -r $aus_file ] && echo "# ERROR: '$aus_file' DNE!" && continue
   !  [[ $aus_file =~ /([0-9][0-9][0-9]/ses-[0-9])/ ]] && echo "no id/ses- in '$aus_file'" && continue
   idses=${BASH_REMATCH[1]}
   preprocs=($(find ../preproc/*/$idses/ -not -ipath '*TEST*' -name $final_preproc))
   test $expected_runs -ne ${#preprocs[@]} && echo "ERROR: $idses has $_/$expected_runs runs: ${preprocs[*]}" && continue

   id_ses=${idses//\//_}
   saveas=../glm/${id_ses}/${id_ses}_glm_bucket-FaceVsCar_glm-10.nii.gz
   [ -r $saveas ] && echo "# have $saveas" && continue
   
   all_censor_files="$(perl -pe "s:$final_preproc:motion_info/fd_0.8_censor.1D:g" <<< "${preprocs[@]}")"
   all_motion_files=$(perl -pe "s:$final_preproc:motion.par:g" <<< "${preprocs[@]}") 

   echo "proc: ${preprocs[*]}"
   echo "censor: $all_censor_files"
   echo "mot: $all_motion_files"
   
   # make sure we have the older we expect
   for i in 0 1 2; do
     proc_i=${preprocs[$i]}
     want_i=${EXPECT_ORDER[$i]}
     ! grep -q $want_i <<< "$proc_i" &&
	 echo "#ERROR: run #$i is not $want_i: '$proc_i'" && continue 2
   done

   timebase=1d/sub-${id_ses}
   
   glmdir=$(dirname $saveas)
   test -d  $glmdir || mkdir -p $_
   # make motion and censor files
   # ...._bold/motion_info/fd_0.8_censor.1D
   # ...._bold/motion.par
   censortr=$glmdir/fd_censor.1d
   cat $all_censor_files |writeto $censortr
   motion=$glmdir/motion.1d
   cat $all_motion_files |writeto $motion
   
   # 20210124 changed from just 3 GLTs to use 3 for each run and compare with gltsym
   # 20210301 add more GLTs: 'face_corr' and 'face_mem'
   njobs=$[ $(nproc --all)/2 ]

   $DRYRUN 3dDeconvolve -input "${preprocs[@]}" \
         -jobs $njobs \
         -fout -rout -tout \
         -overwrite \
         -bucket $saveas \
         -errts ${saveas/.nii.gz/_errts.nii.gz} \
         -x1D $glmdir/X-FaceVsCar.1D \
         -polort 3 \
         -local_times \
         -num_stimts 15 \
         -censor $censortr \
         -GOFORIT 5 `#no errors in test1d cause matrix issues` \
         \
         -stim_file 1 $motion'[0]' -stim_base 1  -stim_label 1 "tx"\
         -stim_file 2 $motion'[1]' -stim_base 2  -stim_label 2 "ty"\
         -stim_file 3 $motion'[2]' -stim_base 3  -stim_label 3 "tz"\
         -stim_file 4 $motion'[3]' -stim_base 4  -stim_label 4 "rx"\
         -stim_file 5 $motion'[4]' -stim_base 5  -stim_label 5 "ry"\
         -stim_file 6 $motion'[5]' -stim_base 6  -stim_label 6 "rz"\
         \
         -stim_times_AM1 7  ${timebase}/AUS/Mem.1d        'dmBLOCK' -stim_label 7  'Amem' \
         -stim_times_AM1 8  ${timebase}/AUS/Test_crct.1d  'dmBLOCK' -stim_label 8  'Acorr'\
         -stim_times_AM1 9  ${timebase}/AUS/Test_err.1d   'dmBLOCK' -stim_label 9  'Aerr' \
         -stim_times_AM1 10 ${timebase}/Cars/Mem.1d       'dmBLOCK' -stim_label 10 'Cmem' \
         -stim_times_AM1 11 ${timebase}/Cars/Test_crct.1d 'dmBLOCK' -stim_label 11 'Ccorr'\
         -stim_times_AM1 12 ${timebase}/Cars/Test_err.1d  'dmBLOCK' -stim_label 12 'Cerr' \
         -stim_times_AM1 13 ${timebase}/USA/Mem.1d        'dmBLOCK' -stim_label 13 'Umem' \
         -stim_times_AM1 14 ${timebase}/USA/Test_crct.1d  'dmBLOCK' -stim_label 14 'Ucorr'\
         -stim_times_AM1 15 ${timebase}/USA/Test_err.1d   'dmBLOCK' -stim_label 15 'Uerr' \
         \
         -num_glt 10 \
         -gltsym "SYM:Amem +Cmem +Umem"     -glt_label 1 'mem' \
         -gltsym "SYM:Acorr +Ccorr +Ucorr"  -glt_label 2 'correct' \
         -gltsym "SYM:Aerr +Cerr +Uerr"     -glt_label 3 'error' \
         -gltsym "SYM:Acorr +Ccorr +Ucorr -Amem -Cmem -Umem"  -glt_label 4 'corr-mem' \
         -gltsym "SYM:Acorr +Ccorr +Ucorr +Aerr +Cerr +Uerr"  -glt_label 5 'all_test' \
         -gltsym "SYM:.5*Acorr +.5*Ccorr +.5*Ucorr +.5*Aerr +.5*Cerr +.5*Uerr -Amem -Cmem -Umem"  -glt_label 6 'allresp-mem' \
         -gltsym "SYM:.5*Acorr +.5*Ucorr"  -glt_label 8 'face_corr' \
         -gltsym "SYM:.5*Amem +.5*Umem"  -glt_label 9 'face_mem' \
         -gltsym "SYM:.5*Acorr +.5*Ucorr -Ccorr"  -glt_label 10 'face-car_corr' || continue

   [ -n "${ONLYONE}" ] && break
done
